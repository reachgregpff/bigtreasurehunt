<% include partials/scripts %>

<script type='text/javascript'>
  var quizData =<%-JSON.stringify(quiz)%>
</script>

<!-- Google Maps API -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.18.0/TweenMax.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDPgGpH-ul7LWldsPvGDdI1j1vRqqlSn7I"></script>

<div id="googlemap">

</div>

<div class="wrapper">
    <center>
      <img id="treasure-hunt-logo" src="images/Treasure-Hunt.png" alt="">
    </center>


  <center>
    <div class="row" id="quiz">
      <div class="col-md-1" id="two">
      </div>
      <div class="col-md-1" id="one">
        <a>
          <img src="/images/numbers/left.png" id="backward">
        </a>
      </div>
      <div class="col-md-1" id="two">
        <img src="/images/numbers/1.png" id="question-number">
      </div>
      <div id="q-n-a">
        <div class="col-md-4" id="three">
          <p id="question"></p>
        </div>
        <div class="col-md-3" id="four">
          <p></p>
          <div class="input-group"  id="answer">
            <input type="text" class="form-control" placeholder="Your answer..." id="user-answer">
            <span class="input-group-btn">
              <button class="btn btn-secondary" type="button" id="submit-button" onclick="checkAnswer($('#user-answer').val());" >Go!</button>
            </span>
          </div>
        </div>
      </div>
      <div class="col-md-1" id="five">
        <a>
          <img src="/images/numbers/right.png" id="forward">
        </a>
      </div>
    </div>
  </center>

</div>

<center>
  <div id="points-div">
    <p id="points"></p>
  <div>
</center>

<div id="treasure">
  <img src="" alt="" id="treasure-image">
</div>

<!-- Bottom stuff-->
<div  class="col-md-10" id="bottom-elements">
  <div id="timer" class="col-md-2">
    <center>
      <p>[00:00:00]</p>
    </center>
  </div>

  <div id="inventory" class="col-md-6">
    <center>
      <div class="row">
        <img src="/images/numbers/1.png" id="inv-1">
        <img src="/images/numbers/2.png" id="inv-2">
        <img src="/images/numbers/3.png" id="inv-3">
        <img src="/images/numbers/4.png" id="inv-4">
        <img src="/images/numbers/5.png" id="inv-5">
        <img src="/images/numbers/6.png" id="inv-6">
        <img src="/images/numbers/7.png" id="inv-7">
        <img src="/images/numbers/8.png" id="inv-8">
        <img src="/images/numbers/9.png" id="inv-9">
        <img src="/images/numbers/10.png" id="inv-10">
      </div>
    </center>
  </div>

  <div id="score" class="col-md-2">
    <p id="score-display">SCORE: 0</p>
  </div>

  <a href = "/">
    <div id="quit" class="col-md-1">
      <p>QUIT</p>
    </div>
  </a>

</div>



<script>





//-----------------Global variables-------------

/* var quiz = [
  ["Name this Melbourne's oldest hotel and pub on the corner of Flinders and Russell Streets built in 1850.", "the DUKE hotel", -37.816388, 144.969999, 20],
  ["This Beyonce-inspired 68-storey skyscraper will be built in Melbourne city at this address", "134 SPENCER street", -37.817278, 144.953863, 20],
  ["This coastal township in Melbourne harvests about 60 per cent of Australia's mussels.", "PORTARLINGTON", -38.114600, 144.653049, 10],
  ["This bluestone-cobbled lane in the city has graffiti covered walls with sophisticated urban art.", "HOSIER lane", -37.816431, 144.969123, 10],
  ["Off Flinders Lane, a block and a half from Swanston Street, the video clip to 'Long Way to the Top' was filmed. Name this lane.", "ACDC lane", -37.815540, 144.970895, 10],
  ["The Melburnian idiom 'I'll meet you under the clocks' refers to the row of clocks at the entrance of what ...?", "FLINDERS street station", -37.817780, 144.966944, 10],
  ["This historic world's oldest amusement park under management is more than 100 years old is located at...", "st KILDA", -37.867713, 144.976899, 5],
  ["Australian-born Singer Kylie Minogue was raised in this Melbourne suburb", "SURREY hills", -37.826173, 145.099895, 5],
  ["Vegemite was not only invented in Melbourne but every jar of Vegemite 'ever made' has come from the Melbourne factory at _ _ _ _ _ _ _ _ _'s bend ?", "FISHERMAN's bend", -37.826553, 144.911617, 5],
  ["This vegetables, fruits, food and non-food destination in the city was once a cemetry and has roughly 9,000 people buried under its sheds and car park.", "queen VICTORIA market", -37.807614, 144.956806, 5]
];  */ 

var quiz = [];

// console.log(quizData.QnA[0]);     // check if we are able to access ejs data
$( quizData.QnA ).each(function( index, questionSet ) {
  // console.log( questionSet["Question"] );
  var quizRow = [];
  quizRow.push(questionSet["Question"]);
  quizRow.push(questionSet["Answer"]);
  quizRow.push(parseFloat(questionSet["Lat"]));
  quizRow.push(parseFloat(questionSet["Lng"]));
  quizRow.push(parseInt(questionSet["Points"]));
  quiz.push(quizRow);
});

var map = null;  // initialize map to null
var questionsCompleted = [false, false, false, false, false, false, false, false, false, false,];
var totalScore = 0;
var correctAnswerCount = 0;
var previousLat = null;
var previousLng = null;


//___________________________________________________________________________________________________________________

//When the left or right arrow button is clicked

function change_question(q_no, direction){

    $("#user-answer").val("");
    
    if((q_no === 10 && direction === "forward") || (q_no === 1 && direction === "backward")){ 
      return;
    } else{
      if( direction === "forward"){
        //change the image for the question number
        newQuestionNumberImage = "/images/numbers/" + (q_no+1) + ".png";
        $('#question-number').attr('src', newQuestionNumberImage);


        //change the question
        newQuestion = quiz[q_no][0];
        $('#question').html(newQuestion);
        $('#answer').attr("placeholder", "Your answer...").blur();

        //enable submit button if question not completed, disable if completed
        if(questionsCompleted[q_no] === true){
          $('#submit-button').attr('disabled', 'disabled');
          $('#question').css('color', 'green');
        }else {
          $('#submit-button').removeAttr('disabled');
          $('#question').css('color', 'red');
        }

      }else{
        //change the image for the question number
        newQuestionNumberImage = "/images/numbers/" + (q_no-1) + ".png";
        $('#question-number').attr('src', newQuestionNumberImage);

        //change the question
        newQuestion = quiz[q_no-2][0];
        $('#question').html(newQuestion);
        $('#question').attr("placeholder", "Your answer...").blur();

        //enable submit button if question not completed, disable if completed
        if(questionsCompleted[q_no-2] === true){
          $('#submit-button').attr('disabled', 'disabled');
          $('#question').css('color', 'green');
        }else {
          $('#submit-button').removeAttr('disabled');
          $('#question').css('color', 'red');
        }

      }

    }
  }

function getQuestionNumber(){
  var questionNumber = $('#question-number').attr('src').slice(16);

  if(questionNumber.charAt(1) === "0"){
    return 10;
  }else{
    return parseInt(questionNumber.charAt(0));
  }
}

$('#forward').on('click', function(){

  //console.log("in right arrow clicked");
  questionNumber = getQuestionNumber();
  //console.log("Question number was " + questionNumber);

  change_question(questionNumber, "forward");  

});  

$('#backward').on('click', function(){

  //console.log("in left arrow clicked");
  questionNumber = getQuestionNumber();
  //console.log("Question number was " + questionNumber);
  change_question(questionNumber, "backward");

});



//--------------------------------------------------------------------------------------------------------------




//%%%%%%%%%%%%%%%%%%%%% check answer
function findKeyword(answer){

  answerArray = answer.split('');
  var keyword = "";
  $.each(answerArray, function(index){
    if(this >= 'A' && this <= 'Z'){
      keyword = keyword + this;
    }
  });
  return keyword;
}


function checkAnswer(answer){
  //console.log("In ANSWER: " + answer);

  answer = answer.toUpperCase();

  //Find out which question this is 
  var questionNumber = getQuestionNumber();
  //console.log(questionNumber);


  //check if this answer is correct
  var correctAnswer = quiz[(questionNumber-1)][1];


  keyWordOfAnswer = findKeyword(correctAnswer);
  correctAnswer = correctAnswer.toUpperCase();
  //console.log(correctAnswer);
  //console.log(keyWordOfAnswer);


  //Now check the answer, if correct, move to the new location
  if(answer.indexOf(keyWordOfAnswer) >= 0){

    //RIGHT ANSWER, the main keyword has matched user/player's answer
    //fetch the lat and lng for this answer
    if(previousLat != null && previousLng != null){
      var oldLat = previousLat;
      var oldLng = previousLng;
    }else {
      oldLat = -37.817954;
      oldLng = 144.959257;
    }

    var newLat = quiz[(questionNumber-1)][2];
    var newLng = quiz[(questionNumber-1)][3];

    previousLat = newLat;
    previousLng = newLng;

    //these are functions to smoothen the pan from previous location to new location
    var EasingAnimator = function(opt){
          opt = opt || {};
          this.easingInterval = opt.easingInterval;
          this.duration = opt.duration || 1000;
          this.step = opt.step || 50;
          this.easingFn = opt.easingFn  || function easeInOutElastic(t, b, c, d) {
              if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
              return -c/2 * ((t-=2)*t*t*t - 2) + b;
          };
          this.callBack = opt.callBack || function(){};
      };
    
    EasingAnimator.makeFromCallback = function(callBack){
      return new EasingAnimator({
          callBack: callBack
      });
    };

    EasingAnimator.prototype.easeProp = function(obj, propDict){
      propDict = propDict || {};
      
      var self = this,
          t = 0,
          out_vals = JSON.parse(JSON.stringify(obj));
      
      clearInterval(self.easingInterval);
      self.easingInterval = setInterval(function(){
          t+= self.step;
          if (t >= self.duration) {
              clearInterval(self.easingInterval);
              self.callBack(propDict);
              return;
          }
          var percent = self.easingFn(t, 0, 1, self.duration);
          Object.keys(propDict).forEach(function(key, i) {
              var old_val = obj[key];
              
              out_vals[key] = old_val - percent*(old_val - propDict[key]);
          });
          self.callBack(out_vals);
      }, self.step);
    };


    var easingAnimator = EasingAnimator.makeFromCallback(function(latLng){
          map.setCenter(latLng) ;
    });

    //end of functions to smoothen panning of google maps

    var points = [
      {lat: oldLat, lng: oldLng},
      //{lat: -37.807368, lng: 144.956764} 
      {lat: newLat, lng: newLng}   //-38.114465, 144.651847
    ];

    //console.log("old lat " + oldLat + " old lng " + oldLng + " new lat " + newLat + " new lng " + newLng );
                  
    //easingAnimator.easeProp({lat: -37.817799, lng: 144.967125}, {lat: -37.807368, lng: 144.956764});
    easingAnimator.easeProp({lat: oldLat, lng: oldLng}, {lat: newLat, lng: newLng});

    // Adds the data to the content key
    var data =  questionNumber + ". " + correctAnswer;

    // Adds the data to the content key
    var infowindow = new google.maps.InfoWindow({
      content: data
    });

    var marker = new google.maps.Marker({
      position: {lat: newLat, lng: newLng},
      map: map,
      //icon: "/images/Big_Gold_Coin_Animation.gif",
      icon: "/images/Coin.gif",
      animation: google.maps.Animation.BOUNCE,
      title: correctAnswer
    })


    // adds it to the infobox to this functions
    var markerInfoBox = function () {
        infowindow.open(map,marker);
    }
    // Calling the infobox function whenever the document loadsup
    markerInfoBox();
    
     
    // Now get the treasure div and display treasure image in it after say 2 seconds
    setTimeout(function(){


      questionsCompleted[questionNumber-1] = true;

      //display points
      var points = quiz[(questionNumber-1)][4];
      var pointsDisplay = points + " POINTS";
      $('#points').html( pointsDisplay );

      //update the total score
      totalScore += points;
      var newScore = "SCORE: " + totalScore;

      //update the correctanswer count
      correctAnswerCount++;

      $('#score-display').html(newScore);

      //console.log("Displaying treasure");
      $treasure = $('#treasure-image');

      
      if(points === 20){
        treasure = "/images/inventory/treasure-chest-20.gif";
      }else if(points === 10){
        treasure = "/images/inventory/bag-of-gold-10.png";
      } else {
        treasure = "/images/inventory/ruby-5.png";
      }

      $treasure.attr('src', treasure);

      

    }, 2000);

    // Now make score vanish and move treasure to inventory after say 4 seconds
    setTimeout(function(){

      //display points
      $('#points').html("");

      //console.log("Removing treasure");
      $treasure = $('#treasure-image');
      var treasureSave = $treasure.attr('src');

      if(correctAnswerCount == 10) {
        $treasure.attr('src', "/images/winner.png");
      } else{
        $treasure.attr('src', "");
      }

      //moving treasure to the inventory
      inventoryId = '#inventory #inv-' + questionNumber;

      inventory_cell = $(inventoryId);
      inventory_cell.attr("src", treasureSave);


    }, 4000);


    //now disable the submit button for this question
    $('#submit-button').attr('disabled', 'disabled');
    $('#question').css('color', 'green');

  }

}

//%%%%%%%%%%%%%%%%%%%%%

$('#quit').on('click', function(){

  $('#main-menu').show();

});


//-------------------------------------------------------------------------------------------------------------------
//Load googlemaps initially

function shuffle(o){
    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
}

$(document).ready(function(){

  console.log("in document ready");

  $('#main-menu').hide();

  quiz = shuffle(quiz);  //shuffle the array

  //display the first question
  $('#question').html(quiz[0][0]);

  // Adds the data to the content key
  var data = "You are here";

  // Adds the data to the content key
  var infowindow = new google.maps.InfoWindow({
    content: data
  });

    map = new google.maps.Map($('#googlemap')[0], {
        zoom: 16,
        center: { lat: -37.817954, lng: 144.959257},
        styles: [{"featureType":"administrative","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"administrative.locality","elementType":"geometry","stylers":[{"visibility":"off"},{"color":"#d6bc68"}]},{"featureType":"landscape","elementType":"all","stylers":[{"visibility":"on"},{"color":"#e7cd79"},{"weight":0.1}]},{"featureType":"landscape.natural.landcover","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#d6bc68"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"on"},{"color":"#d6bc68"}]},{"featureType":"poi.attraction","elementType":"geometry","stylers":[{"visibility":"off"},{"color":"#cfb665"}]},{"featureType":"poi.business","elementType":"all","stylers":[{"color":"#e9d9a6"},{"visibility":"on"}]},{"featureType":"poi.government","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.medical","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.place_of_worship","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.school","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.sports_complex","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"geometry","stylers":[{"visibility":"simplified"},{"color":"#e9d9a6"}]},{"featureType":"road","elementType":"geometry.stroke","stylers":[{"visibility":"off"},{"weight":1},{"color":"#e9d9a6"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"visibility":"simplified"},{"color":"#e9d9a6"}]},{"featureType":"road.highway","elementType":"labels.text","stylers":[{"visibility":"off"}]},{"featureType":"road.highway.controlled_access","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"visibility":"on"},{"color":"#d6bc68"}]},{"featureType":"road.arterial","elementType":"labels.text.stroke","stylers":[{"color":"#cfb665"},{"visibility":"off"}]},{"featureType":"transit.line","elementType":"all","stylers":[{"color":"#d6bc68"},{"visibility":"on"}]},{"featureType":"transit.station.airport","elementType":"geometry.fill","stylers":[{"visibility":"off"},{"color":"#d6bc68"}]},{"featureType":"water","elementType":"all","stylers":[{"visibility":"simplified"},{"color":"#282828"}]}]
    });

    // console.log(map);

    var marker = new google.maps.Marker({
        position: {lat: -37.817954, lng: 144.959257},
        map: map,
        //icon: "/images/you-are-here.png",
        //animation: google.maps.Animation.DROP,
        title: "Treasure Hunt"
    })

    // adds it to the infobox to this functions
    var markerInfoBox = function () {
        infowindow.open(map,marker);
    }

    // Calling the infobox function whenever the document loadsup
    markerInfoBox();


});


//-----------------------------------------------------------------------------------------------------------------------------
</script>





